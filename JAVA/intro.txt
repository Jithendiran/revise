There are 3 editions of JAVA
 - JAVA Standard (Desktop App)
 - JAVA Enterprise (Server-side)
 - JAVA Micro (Mobile App)

 JDK (Java Development Kit)
  - Set of programs that enable us to develop programs
  - It Contains JRE (Java Runtime Environment) that is used to run programs
  - JRE & JDK contains JVM (Java Virtual Machine)
  - JVM will run programs

When java is compilied using javac compilier it producese .class files it is bytecode
JVM executes .class files here execution run's using interpertor

each java program contains atleast one class

Standard
pascal case used for class, interface eg: ThisIsAName
camel case used for variables, method eg: thisIsAName

Java Identifiers or variable names can contain alphabet, _, number, $
Identifier must start with letter or _ or $. it cannot start with number
Identifiers can't be an key word

Working on openjdk version "17.0.6" 2023-01-17

comiple command : javac FileName.java will produce ClassName.class
'''
When comiple the .class name is from compiled java class name 
When class access modifier is default we can give different name for file name and class name when program is compiled the byte code is generated in the name of class name
When class access modifier is public we must give file same and class name must be same else it will throw an error 
'''
run command: java FileName

can't get source code from byte code (ClassName.class)
but we can get structure of the class from byte code using javap
javap ClassName

Source: college, Youtube - Telusko

start
 1. Simple.java
 2. basic
    * Scope.java
    * Class.java
    * Object.java
    * This.java
    * Loop.java
    * Method.java
    * Switch.java
    * Wrapper.java 
    * Array.java
    * TwoDimArray.java
    * ArrayListSample.java
    * InnerClass.java
    * Encapsulation.java
    * StringCustom.java
  3. Static
    * Sample.java
    * Static.java
  4. testpackage
    * Test1.java
    * Test2.java
  5. inheritance
    * GrandParent.java
    * Parent.java
    * Child.java
    * DynaminMethodDispatch.java
    * Final.java
    * Abstract.java
    * Interface.java
    * AdvancedInterface.java
  6. accessModifiers
  7. exception
  8. multiThreading

  Every class will extend Object class

  In java Object is created in heap memory and the reference is stored in variable that variables are stored in stack